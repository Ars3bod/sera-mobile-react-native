name: üçé Build iOS Debug

on:
  push:
    branches: [develop, feature/*]
  pull_request:
    branches: [develop, main]
  workflow_dispatch:

jobs:
  build-ios-debug:
    name: Build iOS Debug App
    runs-on: macos-latest

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: üíé Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
          working-directory: ios

      - name: üîÑ Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: üì¶ Install dependencies
        run: npm ci --legacy-peer-deps

      - name: ‚ÑπÔ∏è Show React Native info
        run: npx react-native info

      - name: üçé Install CocoaPods dependencies
        run: cd ios && pod install --repo-update

      - name: üì± List available simulators
        run: xcrun simctl list devices available

      - name: üèóÔ∏è Build iOS Debug Archive
        run: |
          cd ios
          xcodebuild -workspace seraApp.xcworkspace \
                     -scheme seraApp \
                     -configuration Debug \
                     -destination generic/platform=iOS \
                     -archivePath $PWD/build/seraApp-Debug.xcarchive \
                     archive

      - name: üì¶ Export Debug IPA
        run: |
          cd ios
          # ÿ•ŸÜÿ¥ÿßÿ° ExportOptions.plist ŸÑŸÑŸÄ Debug
          cat > ExportOptionsDebug.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>development</string>
              <key>teamID</key>
              <string>\${DEVELOPMENT_TEAM}</string>
              <key>compileBitcode</key>
              <false/>
              <key>stripSwiftSymbols</key>
              <true/>
              <key>uploadBitcode</key>
              <false/>
              <key>uploadSymbols</key>
              <true/>
          </dict>
          </plist>
          EOF

          # Export IPA
          xcodebuild -exportArchive \
                     -archivePath $PWD/build/seraApp-Debug.xcarchive \
                     -exportOptionsPlist ExportOptionsDebug.plist \
                     -exportPath $PWD/build/debug \
                     -allowProvisioningUpdates || \
          xcodebuild -exportArchive \
                     -archivePath $PWD/build/seraApp-Debug.xcarchive \
                     -exportPath $PWD/build/debug \
                     -exportOptionsPlist ExportOptionsDebug.plist \
                     -allowProvisioningDeviceRegistration

      - name: üìã List build outputs
        run: |
          find ios/build -name "*.app" -type d || echo "No .app files found"
          find ios/build -name "*.ipa" -type f || echo "No .ipa files found"

      - name: ‚¨ÜÔ∏è Upload iOS Debug IPA
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: sera-ios-debug-${{ github.run_number }}
          path: |
            ios/build/debug/*.ipa
            ios/build/debug/*.app
          retention-days: 7
          if-no-files-found: warn

      - name: üì± Upload Simulator App Bundle
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: sera-ios-debug-simulator-${{ github.run_number }}
          path: ios/build/Build/Products/Debug-iphonesimulator/seraApp.app
          retention-days: 7
          if-no-files-found: ignore

      - name: üìä Build Info
        run: |
          echo "üéâ iOS Debug build completed!"
          echo "üì± Platform: iOS Device + Simulator"
          echo "üîß Configuration: Debug"
          echo "üì¶ Artifacts:"
          if [ -f ios/build/debug/*.ipa ]; then
            for ipa in ios/build/debug/*.ipa; do
              size=$(du -h "$ipa" | cut -f1)
              echo "  üì± IPA: $(basename $ipa) ($size)"
            done
            echo "‚úÖ Debug IPA built successfully!"
            echo "‚ö†Ô∏è  Note: Debug IPA requires development provisioning profile"
          else
            echo "  üì± Simulator .app bundle created"
            echo "‚ÑπÔ∏è  Note: No IPA created - requires proper code signing for device"
          fi
          echo "üì• Download from: Actions ‚Üí Artifacts ‚Üí sera-ios-debug-${{ github.run_number }}"
          echo "üí° Tip: Use Xcode or iOS device for testing"
