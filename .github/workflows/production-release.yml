name: üöÄ Production Release - Google Play & App Store

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'üì± Version number (e.g., 1.3.0)'
        required: true
        type: string
      release_notes:
        description: 'üìù Release notes (what changed in this version)'
        required: true
        type: string
      deploy_android:
        description: 'ü§ñ Deploy to Android (Google Play)'
        required: false
        type: boolean
        default: true
      deploy_ios:
        description: 'üçé Deploy to iOS (TestFlight)'
        required: false
        type: boolean
        default: true

env:
  NODE_VERSION: '20'
  JAVA_VERSION: '17'
  RUBY_VERSION: '3.2'

jobs:
  # ... all other jobs (version-bump, build-android, etc.) unchanged ...

  # ============================================
  # Job 4: Build iOS IPA (fixed for C++20)
  # ============================================
  build-ios:
    name: üçé Build iOS Release IPA
    needs: version-bump
    runs-on: macos-14     # keep macos-14 (Xcode 15.4), now compatible due to Podfile fix
    environment: PROD
    if: github.event.inputs.deploy_ios == 'true'
    timeout-minutes: 60
    
    steps:
      - name: üì• Checkout Code (versioned)
        uses: actions/checkout@v4
        with:
          ref: v${{ needs.version-bump.outputs.version }}
      
      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: üíé Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
          working-directory: ios

      - name: üì¶ Install NPM Dependencies
        run: npm ci --legacy-peer-deps
      
      - name: üçé Install CocoaPods Dependencies (with enforced C++20)
        run: |
          cd ios
          rm -rf Pods Podfile.lock
          pod install --repo-update --verbose --no-ansi
          
          # Reconfirm C++ settings applied
          echo "‚úÖ Verifying Podfile C++20 enforcement..."
          grep -R "CLANG_CXX_LANGUAGE_STANDARD" Pods/Target\ Support\ Files/* | head -5 || true

      - name: üîê Import iOS Code Signing Certificates
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_CERTIFICATE_P12_BASE64 }}
          p12-password: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
      
      - name: üìÑ Install iOS Provisioning Profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}" | base64 --decode > \
            ~/Library/MobileDevice/Provisioning\ Profiles/${{ secrets.IOS_PROVISIONING_PROFILE_NAME }}.mobileprovision
          echo "‚úÖ Installed provisioning profile: ${{ secrets.IOS_PROVISIONING_PROFILE_NAME }}"

      - name: üèóÔ∏è Build iOS Archive
        run: |
          xcodebuild archive \
            -workspace ios/seraApp.xcworkspace \
            -scheme seraApp \
            -configuration Release \
            -archivePath ios/build/seraApp.xcarchive \
            -destination 'generic/platform=iOS' \
            -allowProvisioningUpdates \
            CODE_SIGN_STYLE=Manual \
            DEVELOPMENT_TEAM=${{ secrets.IOS_TEAM_ID }} \
            PROVISIONING_PROFILE_SPECIFIER="${{ secrets.IOS_PROVISIONING_PROFILE_NAME }}" \
            CODE_SIGN_IDENTITY="Apple Distribution" \
            OTHER_CPLUSPLUSFLAGS='$(inherited) -D_LIBCPP_ENABLE_CXX20_REMOVED_UNARY_BINARY_FUNCTION'
          
          echo "‚úÖ iOS archive created successfully!"

      - name: üì¶ Export IPA
        run: |
          xcodebuild -exportArchive \
            -archivePath ios/build/seraApp.xcarchive \
            -exportPath ios/build \
            -exportOptionsPlist ios/ExportOptions-Release.plist \
            -allowProvisioningUpdates
          
          echo "‚úÖ IPA exported successfully!"
      
      - name: üìã Verify IPA File
        run: |
          if [ -f "ios/build/seraApp.ipa" ]; then
            echo "‚úÖ IPA file found!"
            ls -lh ios/build/seraApp.ipa
          else
            echo "‚ùå IPA file not found!"
            exit 1
          fi
      
      - name: ‚¨ÜÔ∏è Upload IPA Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sera-ios-ipa-v${{ needs.version-bump.outputs.version }}
          path: ios/build/
