name: Build and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '17'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run unit tests
        run: npm test -- --coverage --watchAll=false
        continue-on-error: true

      - name: Upload test coverage
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: unittests
          fail_ci_if_error: false

  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Make gradlew executable
        run: chmod +x android/gradlew

      - name: Create local.properties
        run: echo "sdk.dir=$ANDROID_HOME" > android/local.properties

      - name: Build Android Release APK
        run: cd android && ./gradlew assembleRelease --no-daemon --stacktrace

      - name: Sign APK (if keystore available)
        if: ${{ secrets.ANDROID_KEYSTORE }}
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > android/app/keystore.jks
          cd android && ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=app/keystore.jks \
            -Pandroid.injected.signing.store.password="${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" \
            -Pandroid.injected.signing.key.alias="${{ secrets.ANDROID_KEY_ALIAS }}" \
            -Pandroid.injected.signing.key.password="${{ secrets.ANDROID_KEY_PASSWORD }}"

      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: sera-android-apk
          path: android/app/build/outputs/apk/release/*.apk
          retention-days: 30

  build-ios:
    name: Build iOS IPA
    runs-on: macos-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
          working-directory: ios

      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install CocoaPods dependencies
        run: cd ios && pod install --repo-update

      - name: Build iOS app
        run: |
          cd ios
          xcodebuild -workspace seraApp.xcworkspace \
                     -scheme seraApp \
                     -configuration Release \
                     -destination generic/platform=iOS \
                     -archivePath $PWD/build/seraApp.xcarchive \
                     archive

      - name: Export IPA
        run: |
          cd ios
          xcodebuild -exportArchive \
                     -archivePath $PWD/build/seraApp.xcarchive \
                     -exportOptionsPlist ExportOptions.plist \
                     -exportPath $PWD/build

      - name: Upload iOS IPA
        uses: actions/upload-artifact@v4
        with:
          name: sera-ios-ipa
          path: ios/build/*.ipa
          retention-days: 30

  deploy:
    name: Deploy to App Distribution
    runs-on: ubuntu-latest
    needs: [build-android, build-ios]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Download Android APK
        uses: actions/download-artifact@v4
        with:
          name: sera-android-apk
          path: ./artifacts/android

      - name: Download iOS IPA
        uses: actions/download-artifact@v4
        with:
          name: sera-ios-ipa
          path: ./artifacts/ios

      - name: List artifacts
        run: |
          echo "Android artifacts:"
          ls -la ./artifacts/android/
          echo "iOS artifacts:"
          ls -la ./artifacts/ios/

    # Uncomment and configure for Firebase App Distribution
    # - name: Deploy to Firebase App Distribution
    #   uses: wzieba/Firebase-Distribution-Github-Action@v1
    #   with:
    #     appId: ${{ secrets.FIREBASE_APP_ID }}
    #     serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
    #     groups: testers
    #     file: ./artifacts/android/app-release.apk
    #     releaseNotes: "Automated build from GitHub Actions - Build #${{ github.run_number }}"

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-android, build-ios]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v1.0.${{ github.run_number }}
          name: SERA Mobile v1.0.${{ github.run_number }}
          body: |
            üöÄ **SERA Mobile App Release v1.0.${{ github.run_number }}**

            **Changes in this release:**
            - Automated build from GitHub Actions
            - Build number: ${{ github.run_number }}
            - Commit: ${{ github.sha }}

            **Downloads:**
            - üì± Android APK: sera-app-release.apk
            - üçé iOS IPA: seraApp.ipa (requires signing)

            **Installation:**
            - Android: Enable "Unknown Sources" and install APK
            - iOS: Requires proper provisioning profile
          files: |
            ./artifacts/**/*.apk
            ./artifacts/**/*.ipa
          draft: false
          prerelease: false
